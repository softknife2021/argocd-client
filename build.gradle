
/*
 * *
 *  * Created by softknife2021 on 02/01/22
 *  * Copyright softknife2022 (c) 2022 . All rights reserved.
 *  * Last modified 02/01/22 6:50 PM
 *
 */

plugins {
    // Apply the java-library plugin to add support for Java Library
    id 'java-library'
    id 'idea'
    id "com.adarshr.test-logger" version "2.1.0"
    id 'signing'
    id 'maven-publish'
    id 'io.codearte.nexus-staging' version '0.22.0'
    id "io.freefair.lombok" version "5.0.0-rc4"
}

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    //TODO jcenter will be sunset soon - find another option
    mavenCentral()
    jcenter()
}


compileJava {
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
}

group = 'com.softknfe'
description = 'Argo CD workflow manager'
version = '0.0.1'

dependencies {
    implementation 'com.restbusters:qreasp:0.0.48'
    implementation 'com.squareup.okhttp3:mockwebserver:5.0.0-alpha.2'
    implementation 'org.slf4j:slf4j-api:1.7.28'
    implementation group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'
    implementation group: 'org.apache.commons', name: 'commons-exec', version: '1.3'
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.11'

    //json/models
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.13.1'
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.13.1'
    implementation group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-xml', version: '2.13.1'
    implementation group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-yaml', version: '2.13.1'
    implementation group: 'com.jayway.jsonpath', name: 'json-path', version: '2.4.0'

    //apache
    implementation group: 'org.apache.commons', name: 'commons-text', version: '1.8'
    implementation group: 'org.apache.directory.studio', name: 'org.apache.commons.io', version: '2.4'
    implementation group: 'org.apache.commons', name: 'commons-collections4', version: '4.4'
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.12.0'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:28.0-jre'


    //lombok
    implementation group: 'org.projectlombok', name: 'lombok', version: '1.18.12'

    //mocking
    implementation group: 'com.github.tomakehurst', name: 'wiremock-standalone', version: '2.27.2'

    // Use TestNG framework, also requires calling test.useTestNG() below
    testImplementation group: 'org.testng', name: 'testng', version: '7.4.0'
}

configurations {
    childJars
}

dependencies {
    subprojects.each {
        childJars project(it.path)
    }
}

jar {
    dependsOn configurations.childJars
    from { configurations.childJars.collect { zipTree(it) } }
    exclude "META-INF/*.SF"
    exclude "META-INF/*.DSA"
    exclude "META-INF/*.RSA"
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

if (JavaVersion.current().isJava8Compatible()) {
    allprojects {
        tasks.withType(Javadoc) {
            options.addStringOption('Xdoclint:none', '-quiet')
        }
    }
}


test {
    // Use TestNG for unit tests
    useTestNG()
    testLogging {
        events "passed", "skipped", "failed", "standardOut", "standardError"
    }
}

ext.admin = hasProperty('sonatypeUsername')

artifacts {
    archives jar
    archives sourcesJar
    archives javadocJar
}

signing {
    required { false }
    sign publishing.publications
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            customizePom(pom, rootProject)

            artifact sourcesJar
            artifact javadocJar
        }
    }
    repositories {
        maven {
            url "https://oss.sonatype.org/service/local/staging/deploy/maven2"
            if (admin) {
                credentials {
                    username sonatypeUsername
                    password sonatypePassword
                }
            }
        }
    }
}

model {
    tasks.publish {
        dependsOn(project.tasks.build)
    }
    tasks.install {
        dependsOn(project.tasks.build)
    }
}

def customizePom(pom, gradleProject) {
    pom.withXml {
        def root = asNode()
        // modify POM and add optional flag where needed
        root.dependencies.'*'.findAll {

            ext.artifactId = it.artifactId.text()
            ext.fulldep = it.groupId.text() + ':' + it.artifactId.text() + ':' + it.version.text()
        }

        // add all items necessary for maven central publication
        root.children().last() + {
            println("Name:" + gradleProject.name)
            description gradleProject.description// moduleDescription
            resolveStrategy = Closure.DELEGATE_FIRST

            name 'Repo argocd-client'
            description gradleProject.description
            url 'https://github.com/softknife2021/argocd-client'
            organization {
                name 'softknife2021'
                url 'https://softknife2021.com'
            }
            issueManagement {
                system 'GitHub'
                url 'https://github.com/softknife2021/argocd-client/issues'
            }
            licenses {
                license {
                    name 'The Apache Software License, Version 2.0'
                    url 'https://github.com/softknife2021/argocd-client/blob/master/LICENSE'
                    distribution 'repo'
                }
            }
            scm {
                url 'https://github.com/softknife2021/argocd-client'
                connection 'scm:git:git://github.com/softknife2021/argocd-client.git'
                developerConnection 'scm:git:ssh://git@github.com/softknife2021/argocd-client.git'
            }
            developers {
                developer {
                    id 'Alex'
                    name 'Alexander Matsaylo'
                    email 'softknife2021@gmail.com'
                    timezone '+1'
                }
            }
        }
    }
}

testlogger {
    theme 'mocha' // project level
    slowThreshold 5000
}

task install(dependsOn: publishToMavenLocal) {
    group = 'Publishing'
    description = 'Installs artifacts to local Maven repository'
}

//
// RELEASE
//

task release() {
    group 'Project'
    description 'Builds everything for the release.'

    dependsOn build
    dependsOn javadoc
    //dependsOn jacocoTestReport
}
